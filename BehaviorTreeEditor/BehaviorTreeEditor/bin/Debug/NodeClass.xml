<?xml version="1.0" encoding="utf-8"?>
<NodeClasses xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <Enums>
    <CustomEnum>
      <EnumType>TestEnum</EnumType>
      <Enums>
        <EnumItem>
          <EnumStr>enum1</EnumStr>
          <EnumValue>1</EnumValue>
          <Describe />
        </EnumItem>
        <EnumItem>
          <EnumStr>enum2</EnumStr>
          <EnumValue>2</EnumValue>
          <Describe />
        </EnumItem>
      </Enums>
      <Describe>11111111</Describe>
    </CustomEnum>
  </Enums>
  <Nodes>
    <NodeClass ClassType="StartNode" NodeType="Composite">
      <Describe>行为树根节点</Describe>
      <Fields />
    </NodeClass>
    <NodeClass ClassType="Parallel" NodeType="Composite">
      <Describe>Parallel节点在一般意义上是并行的执行其子节点，即“一边做A，一边做B”</Describe>
      <Fields />
    </NodeClass>
    <NodeClass ClassType="Sequence" NodeType="Composite">
      <Describe>Sequence节点以给定的顺序依次执行其子节点，直到所有子节点成功返回，该节点也返回成功。只要其中某个子节点失败，那么该节点也失败。</Describe>
      <Fields />
    </NodeClass>
    <NodeClass ClassType="Not" NodeType="Decorator">
      <Describe>非节点将子节点的返回值取反</Describe>
      <Fields />
    </NodeClass>
    <NodeClass ClassType="Compare" NodeType="Condition">
      <Describe>Compare节点对左右参数进行比较</Describe>
      <Fields />
    </NodeClass>
    <NodeClass ClassType="Noop" NodeType="Action">
      <Describe>空操作（Noop）节点只是作为占位，仅执行一次就返回成功</Describe>
      <Fields />
    </NodeClass>
  </Nodes>
</NodeClasses>